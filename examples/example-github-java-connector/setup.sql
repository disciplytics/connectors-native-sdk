CREATE APPLICATION ROLE APP_ROLE;

CREATE OR ALTER VERSIONED SCHEMA PUBLIC;
GRANT USAGE ON SCHEMA PUBLIC TO APPLICATION ROLE APP_ROLE;

CREATE SCHEMA IF NOT EXISTS TASKS;

----------
-- STATE
----------
CREATE SCHEMA IF NOT EXISTS STATE;
GRANT USAGE ON SCHEMA STATE TO APPLICATION ROLE APP_ROLE;

CREATE TABLE IF NOT EXISTS STATE.APP_CONFIGURATION (
    KEY STRING NOT NULL,
    VALUE VARIANT NOT NULL
);
GRANT SELECT ON TABLE STATE.APP_CONFIGURATION TO APPLICATION ROLE APP_ROLE;

CREATE TABLE STATE.RESOURCE_CONFIGURATION(
         KEY STRING,
         VALUE VARIANT
);
CREATE TABLE STATE.APP_STATE(
    TIMESTAMP TIMESTAMP_NTZ DEFAULT SYSDATE(),
    KEY STRING,
    VALUE VARIANT
);

-- Procedures
CREATE OR REPLACE PROCEDURE PUBLIC.ENABLE_RESOURCE(RESOURCE_ID STRING)
    RETURNS STRING
    LANGUAGE JAVA
        RUNTIME_VERSION = '11'
        IMPORTS = ('/MyJavaApp.jar')
        HANDLER = 'com.snowflake.connectors.sdk.example_github_connector.api.ResourcesManagementApi.enable_resource'
;
GRANT USAGE ON PROCEDURE PUBLIC.ENABLE_RESOURCE(STRING) TO APPLICATION ROLE APP_ROLE;

CREATE OR REPLACE PROCEDURE PUBLIC.PROVISION_CONNECTOR(CONFIGURATION VARIANT)
    RETURNS STRING
    LANGUAGE JAVA
        RUNTIME_VERSION = '11'
        IMPORTS = ('/MyJavaApp.jar')
        HANDLER = 'com.snowflake.connectors.sdk.example_github_connector.api.ConnectorManagementProcedures.provision_connector'
;
GRANT USAGE ON PROCEDURE PUBLIC.PROVISION_CONNECTOR(VARIANT) TO APPLICATION ROLE APP_ROLE;

CREATE OR REPLACE PROCEDURE PUBLIC.INGEST_DATA(resource_id string)
    RETURNS VARIANT
    LANGUAGE JAVA
        RUNTIME_VERSION = '11'
        IMPORTS = ('/MyJavaApp.jar')
        HANDLER = 'com.snowflake.connectors.sdk.example_github_connector.ingestion.Ingestion.ingest_data'
;
GRANT USAGE ON PROCEDURE PUBLIC.INGEST_DATA(string) TO APPLICATION ROLE APP_ROLE;

CREATE PROCEDURE PUBLIC.REGISTER_REFERENCE(ref_name STRING, operation STRING, ref_or_alias STRING)
    RETURNS STRING
    LANGUAGE SQL
AS $$
    BEGIN
        CASE (operation)
            WHEN 'ADD' THEN
                SELECT SYSTEM$SET_REFERENCE(:ref_name, :ref_or_alias);
            WHEN 'REMOVE' THEN
                SELECT SYSTEM$REMOVE_REFERENCE(:ref_name);
            WHEN 'CLEAR' THEN
                SELECT SYSTEM$REMOVE_REFERENCE(:ref_name);
            ELSE RETURN 'unknown operation: ' || operation;
        END CASE;
        RETURN NULL;
    END;
$$;

GRANT USAGE ON PROCEDURE PUBLIC.REGISTER_REFERENCE(STRING, STRING, STRING) TO APPLICATION ROLE app_role;

-- UI
CREATE OR REPLACE STREAMLIT PUBLIC.EXAMPLE_GITHUB_JAVA_CONNECTOR_APP FROM  '/'
main_file = 'streamlit_app.py';

GRANT USAGE ON STREAMLIT PUBLIC.EXAMPLE_GITHUB_JAVA_CONNECTOR_APP TO APPLICATION ROLE APP_ROLE;
